# syntax=docker/dockerfile:1
FROM python:3.10-slim

# Accept in enivornment secrets
ARG DATABASE_HOST
ARG DATABASE_PORT
ARG DATABASE_NAME
ARG DATABASE_USER
ARG DATABASE_PASSWORD
ARG DJANGO_SECRET_KEY

ENV DATABASE_HOST=$DATABASE_HOST
ENV DATABASE_PORT=$DATABASE_PORT
ENV DATABASE_NAME=$DATABASE_NAME
ENV DATABASE_USER=$DATABASE_USER
ENV DATABASE_PASSWORD=$DATABASE_PASSWORD
ENV DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY

ENV DJANGO_SETTINGS_MODULE=whitewhale.settings.deployment
ENV PUBLIC_URL=/static

# Copy your application code to the container (make sure you create a .dockerignore file if any large files or directories should be excluded)
RUN mkdir /code/
WORKDIR /code/
ADD . /code/

# Install build deps, then run `pip install`, then remove unneeded build deps all in a single step.
# Correct the path to your production requirements file, if needed.
WORKDIR /code/whitewhale/
RUN set -ex \
    && BUILD_DEPS=" \
    build-essential \
    libpcre3-dev \
    libpq-dev \
    mailcap \
    curl \
    nodejs \
    " \
    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \
    && curl -sL https://deb.nodesource.com/setup_14.x | bash - \
    && curl -L https://www.npmjs.com/install.sh | sh \
    && python -m pip install --upgrade pip \
    && pip install --no-cache-dir -r /code/requirements.txt \
    && pytest \
    && npm install \
    && npm run build \
    && DATABASE_URL='' python manage.py collectstatic --noinput \
    && cp build/index.html templates/react-index.html \
    && rm -rf build \
    \
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \
    && rm -rf /var/lib/apt/lists/*


# Deny invalid hosts before they get to Django (uncomment and change to your hostname(s)):
# ENV UWSGI_ROUTE_HOST="^(?!localhost:8000$) break:400"

# Uncomment after creating your docker-entrypoint.sh
# ENTRYPOINT ["/code/docker-entrypoint.sh"]

# Start uWSGI
CMD ["uwsgi", "--yaml", "/code/uwsgi.yml"]
